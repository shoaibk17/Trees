#include <iostream>
#include "bits/stdc++.h"
using namespace std;

struct Node{
    int data; 
    struct Node* left;
    struct Node* right;
    
    Node(int data){
        this-> data = data;
        left = NULL;
        right = NULL;
    }
};

int Calheight(struct Node* node){
    if(node == NULL){
        return 0;
    }
    int lst = Calheight(node->left);
    int rst = Calheight(node->right);
    return max(lst, rst)+1;
}
 
int calDiameter(struct Node* node, int* height){
    if(node == NULL){
        *height =0; return 0;
    }
    int lh =0, rh =0;
    int ldiam = calDiameter(node->left, &lh);
    int rdiam = calDiameter(node->right, &rh);
    int currDiam =lh + rh +1;
    *height = max(lh, rh)+1;
    return max(currDiam, max(ldiam, rdiam));
    
}

int main() {
    struct Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new  Node(5);
    root->right->left = new Node(6);
    root->right->right = new Node(7);
    root->right->right->left = new Node(8);
    
    int height =0;
    cout<<"calDiameter : "<<calDiameter(root, &height);
    //o(n)
    std::cout <<" Height :"<< Calheight(root) << std::endl;
    //o(n)
	return 0;
}
